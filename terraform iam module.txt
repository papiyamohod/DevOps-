****************IAM-Module***************
create 1 dicertory and 1 file
$mkdir modules/iam

$vim module.tf
module "iam" {
  source      = "./modules/iam"
  user_name   = "apple"
  role_name   = "orange"
  policy_name = "papaya"
  groups_name  = "chiku"
}

*********************************

cd modules 
cd iam
create 4 file (main.tf, var.tf, output.tf, provider.tf)
1)vim main.tf
resource "aws_iam_user" "papiya" {
  name = var.user_name
}

resource "aws_iam_role" "T-role" {
  name = var.role_name
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy" "T-pol" {
  name = var.policy_name
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action   = ["ec2:Describe*"]
        Effect   = "Allow"
        Resource = "*"
      }
    ]
  })
}

resource "aws_iam_group" "G-iam" {
  name = var.groups_name
}

# Attach policy to the user
resource "aws_iam_user_policy_attachment" "papiya" {
  user       = aws_iam_user.papiya.name
  policy_arn = aws_iam_policy.T-pol.arn
}
# Attach policy to the role
resource "aws_iam_role_policy_attachment" "role-policy" {
  role       = aws_iam_role.T-role.name
  policy_arn = aws_iam_policy.T-pol.arn
}

# Attach policy to the group
resource "aws_iam_group_policy_attachment" "attack" {
  group      = aws_iam_group.G-iam.name
  policy_arn = aws_iam_policy.T-pol.arn
}

# Add user to the group
resource "aws_iam_group_membership" "space-station" {
  name  = "solar-system"
  users = [aws_iam_user.papiya.name]
  group = aws_iam_group.G-iam.name
}
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2)vim output.tf
output "user_name" {
  value = aws_iam_user.papiya.name

}
output "role_arn" {
  value = aws_iam_role.T-role.arn
}
output "policy_arn" {
  value = aws_iam_policy.T-pol.arn

}d
output "groups_name" {
  value = aws_iam_group.G-iam.name

}
-----------------------
3)vim var.tf
variable "user_name" {
  type = string

}
variable "role_name" {
  type = string

}
variable "policy_name" {
  type = string

}
variable "groups_name" {
  type = string
}
--------------------------------------------
4)provider.tf
terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = "5.85.0"
    }
  }
}

provider "aws" {
  # Configuration options
  region = "ap-southeast-2"
  access_key = ""
  secret_key = ""
}